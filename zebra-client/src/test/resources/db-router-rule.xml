<?xml version="1.0" encoding="UTF-8"?>
<router-rule>

	<!-- Edit by danson.liu -->
		
	<!-- generatedKey用于拆分表存在自增的主键的情况，在拆成多纬度时，需要将主维度生成的主键值取回改写到次维度上执行的Insert SQL上 -->
	<table-shard-rule table="DP_GroupFollowNote" generatedPK="FollowNoteID">
		<!-- 
			<shard-dimension>：分库分表维度拆分规则
				按照NoteID拆分，分成32张表，一个DB中放8个
				dbRule: (#NoteID#.longValue() % 32).intdiv(8)
					解释: 按照NoteID进行分库，取模再整除8，表示将该逻辑表拆成32份，每个DB放8份
				dbIndexes: 是对这4个DB的指定
				tbRule: "#NoteID#.longValue() % 4"
					解释：一条记录路由到某个特定DB后，该如何路由到该DB上的物理Table
				
				<exception>：白名单，优先考虑白名单中的匹配规则，适用于热点数据的分离
		-->
		<shard-dimension dbRule="(#NoteID#.longValue() % 32).intdiv(8)" 
			dbIndexes="Group_00,Group_01,Group_02,Group_03" 
			tbRule="#NoteID#.longValue() % 8" 
			tbSuffix="alldb:[_ByNoteId_00,_ByNoteId_31]" 
			isMaster="true">
			<exception condition="#NoteID# == 100 || #NoteID# == 103" db="Group_00" table="DP_GroupFollowNote_ByNoteId_100_103"/>
			<exception condition="#NoteID# == 1" db="Group_07" table="DP_GroupFollowNote_ByNoteId_1"/>
		</shard-dimension>
		
		<!-- 本次上线由于在一个库中，所以大概配置如下：
		<shard-dimension dbRule="(#NoteID#.longValue() % 32).intdiv(32)" 
			dbIndexes="Group_00" 
			tbRule="#NoteID#.longValue() % 32" 
			tbSuffix="alldb:[_ByNoteId_00,_ByNoteId_31]" 
			isMaster="true">
			<exception condition="#NoteID# == 100 || #NoteID# == 103" db="Group_00" table="DP_GroupFollowNote_ByNoteId_100_103"/>
			<exception condition="#NoteID# == 1" db="Group_07" table="DP_GroupFollowNote_ByNoteId_1"/>
		</shard-dimension>
		 -->
		
		
		<shard-dimension dbRule="(#UserID#.longValue() % 32).intdiv(8)" 
			dbIndexes="Group_00,Group_01,Group_02,Group_03" 
			tbRule="#UserID#.longValue() % 8" 
			tbSuffix="everydb:[_ByUserId_00,_ByUserId_07]" 
			isMaster="false">
			
		</shard-dimension>
	</table-shard-rule>
	
</router-rule>

